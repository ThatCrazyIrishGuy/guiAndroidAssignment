package ie.dit.britton.darren.shoppinglist;

import java.util.Random;

import android.annotation.SuppressLint;
import android.app.ListActivity;
import android.content.Context;
import android.content.res.Resources;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.View.OnClickListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class ShoppingListView extends ListActivity {
	
	private Basket basket = Basket.getInstance();
	private Random r = new Random();
	
	@SuppressLint("ViewHolder")
	public class ShoppingListAdapter  extends ArrayAdapter<String>
	{
		Context context;
		String[] values;
		int textViewResourceId;
		int priceResourceId;
		int plusResourceId;
		int minusResourceId;
		int quantityResourceId;
		
		public ShoppingListAdapter(Context context,int resource,int textViewResourceId,
				int priceResourceId, int plusResourceId, int minusResourceId, int quantityResourceId,String[] values)
		{
			super(context,resource,textViewResourceId,values);
			this.textViewResourceId = textViewResourceId;
			this.priceResourceId = priceResourceId;
			this.plusResourceId = plusResourceId;
			this.minusResourceId = minusResourceId;
			this.quantityResourceId = quantityResourceId;
			this.context = context;
			this.values = values;
		}

		@SuppressLint({ "ViewHolder", "InflateParams" })
		@Override
		public View getView(final int position,  View view, ViewGroup parent) {
		    
			LayoutInflater inflater=getLayoutInflater();
			inflater =(LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);
		        View rowView = inflater.inflate(R.layout.row, parent, false);
		        TextView name = (TextView) rowView.findViewById(textViewResourceId);
		        name.setText(values[position]);
		        TextView price = (TextView) rowView.findViewById(priceResourceId);
		        Double randPrice = r.nextDouble() * 10;
		        randPrice *= 100;
		        randPrice = (double) Math.round(randPrice);
		        final Double finalPrice = randPrice / 100;
		        price.setText("€" + finalPrice.toString());
		        Button plus = (Button) rowView.findViewById(plusResourceId);
		        Button minus = (Button) rowView.findViewById(minusResourceId);
		        final EditText quantity = (EditText) rowView.findViewById(quantityResourceId);
		        
				plus.setOnClickListener(
	               new OnClickListener()
	               {
	               	@Override
	                   public void onClick(View view)
	                   {
	               		
	               		int itemQuantity = 0;
	               		String stringQuantity = quantity.getText().toString();
	               		
	               		if (stringQuantity.length() != 0)
	               		{
		               		  itemQuantity = Integer.parseInt(quantity.getText().toString());
	               		}
	               		
	               		itemQuantity++;
	               		quantity.setText(String.valueOf(itemQuantity));
	               		
	               		Item item = basket.findItem(values[position]);
	               		
	               		if(item.getPrice() != -1.0)
	               		{
	               			item.setQuantity(itemQuantity);
	               		}
	               		else
	               		{
	               			item.setPrice(finalPrice);
	               			item.setQuantity(1);
	               			basket.addItem(item);	
	               		}
	               		
	               		ShowUpdatedTotal();
	                   }
	               });
				
				minus.setOnClickListener(
	               new OnClickListener()
	               {
	               	@Override
	                   public void onClick(View view)
	                   {
	               		int itemQuantity = 0;
	               		String stringQuantity = quantity.getText().toString();
	               		
	               		if (stringQuantity.length() != 0)
	               		{
	               			System.out.println("StringQuantity: "+stringQuantity);
	               			itemQuantity = Integer.parseInt(quantity.getText().toString());
	               			if (itemQuantity > 0)
	               			{
		               			itemQuantity--;
	               			}
	               		}
	               		quantity.setText(String.valueOf(itemQuantity));
	               		
	               		Item item = basket.findItem(values[position]);
	               		
	               		if(item.getPrice() != -1.0)
	               		{
	               			item.setQuantity(itemQuantity);
	               		}
	               		else
	               		{
	               			item.setPrice(finalPrice);
	               			item.setQuantity(itemQuantity);
	               			basket.addItem(item);	
	               		}
	               		
	               		ShowUpdatedTotal();
	                   }
	               });
		        
		        return rowView;
		}

	}
	
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.shopping_list_view);
        Resources res = getResources();
        setListAdapter(new ShoppingListAdapter(this,R.layout.row,R.id.item,R.id.price,R.id.plus,R.id.minus,R.id.quantity,res.getStringArray(R.array.items)));
    }
    
    protected void ShowUpdatedTotal()
    {
    	String message = basket.getTotal().toString();
    	
    	Toast.makeText(getApplicationContext(), message, Toast.LENGTH_SHORT).show();
    }
}
